from fastapi import FastAPI, HTTPException
from pydantic import BaseModel
from src.rag_app.graph import MultiAgentGraph

app = FastAPI()

try:
    multi_agent_graph = MultiAgentGraph()
except Exception as e:
    raise RuntimeError(f"Error initializing MultiAgentGraph: {e}")


class QueryRequest(BaseModel):
    query: str


@app.post("/invoke")
async def invoke_query(request: QueryRequest):
    """
    Handles the invocation of a query using the MultiAgentGraph's invoke method.

    This asynchronous endpoint processes a query request and returns the response 
    generated by the MultiAgentGraph. If an error occurs during the invocation, 
    an HTTPException with a 500 status code is raised.

        request (QueryRequest): An object containing the query to be processed.

        dict: A dictionary containing the response from the MultiAgentGraph.

    Raises:
        HTTPException: If an error occurs during the invocation, an exception is raised 
        with a 500 status code and the error details.
    """
    try:
        response = multi_agent_graph.invoke(request.query)
        return {"response": response}
    except Exception as e:
        raise HTTPException(status_code=500, detail=str(e))